{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\tpid as string,\n\t\tflight_status as string,\n\t\tengine_number as string,\n\t\tRemaining_Useful_Life as integer,\n\t\tt24 as string,\n\t\tt30 as string,\n\t\tt50 as string,\n\t\tp30 as string,\n\t\tnf as string,\n\t\tnc as string,\n\t\tps30 as string,\n\t\tphi as string,\n\t\tnrf as string,\n\t\tnrc as string,\n\t\tbpr as string,\n\t\thtbleed as string,\n\t\tw31 as string,\n\t\tw32 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tpid as string,\n\t\tflight_status as string,\n\t\tengine_number as string,\n\t\tRemaining_Useful_Life as string,\n\t\tt24 as string,\n\t\tt30 as string,\n\t\tt50 as string,\n\t\tp30 as string,\n\t\tnf as string,\n\t\tnc as string,\n\t\tps30 as string,\n\t\tphi as string,\n\t\tnrf as string,\n\t\tnrc as string,\n\t\tbpr as string,\n\t\thtbleed as string,\n\t\tw31 as string,\n\t\tw31 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1 filter(flight_status=='Take-off') ~> Filter1\nFilter1, source2 join(source1@pid == source2@pid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 aggregate(groupBy(Column_1 = source1@pid,\n\t\tColumn_2 = source1@flight_status,\n\t\tColumn_3 = source1@engine_number),\n\tSUM_Useful_life = count(source1@engine_number)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}